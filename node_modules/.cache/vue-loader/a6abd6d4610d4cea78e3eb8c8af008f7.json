{"remainingRequest":"D:\\idea_java_projects\\springboot和vue医院管理系统3602\\HospitalVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\idea_java_projects\\springboot和vue医院管理系统3602\\HospitalVue\\src\\views\\DataExpore.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\idea_java_projects\\springboot和vue医院管理系统3602\\HospitalVue\\src\\views\\DataExpore.vue","mtime":1723175131358},{"path":"D:\\idea_java_projects\\springboot和vue医院管理系统3602\\HospitalVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\idea_java_projects\\springboot和vue医院管理系统3602\\HospitalVue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\idea_java_projects\\springboot和vue医院管理系统3602\\HospitalVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\idea_java_projects\\springboot和vue医院管理系统3602\\HospitalVue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DataExpore.vue"],"names":[],"mappings":";AAWA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"DataExpore.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"Echarts\">\n    <div id=\"orderPeople\" style=\"width: 1200px; height: 400px;\"></div>\n    <div id=\"orderSection\" style=\"width: 1200px; height: 400px;\"></div>\n    <div id=\"remainingMedicines\" style=\"width: 600px; height: 600px\" ></div>\n    <div id=\"orderGender\" style=\"width: 540px; height: 500px;float:left\"></div>\n    <div id=\"patientAge\" style=\"width: 600px; height: 500px;float:right\"></div>\n  </div>\n\n</template>\n<script>\nimport request from \"@/utils/request.js\";\n\nexport default {\n  name: \"dataExpore\",\n  data() {\n    return {\n      sevenDate: [],\n      sevenOrder: [],\n    };\n  },\n  methods: {\n    //统计患者年龄分布\n    patientAge(){\n      var myChart = this.$echarts.init(document.getElementById(\"patientAge\"));\n      request.get(\"patient/patientAge\")\n      .then(res => {\n        var option = {\n           title: {\n        text: '患者年龄段分布',\n        left: 'center'\n    },\n    tooltip: {\n        trigger: 'item'\n    },\n    legend: {\n        top: '5%',\n        left: 'center'\n    },\n    series: [\n        {\n            name: '年龄段',\n            type: 'pie',\n            radius: ['40%', '70%'],\n            avoidLabelOverlap: false,\n            itemStyle: {\n                borderRadius: 10,\n                borderColor: '#fff',\n                borderWidth: 2\n            },\n            label: {\n                show: false,\n                position: 'center'\n            },\n            emphasis: {\n                label: {\n                    show: true,\n                    fontSize: '40',\n                    fontWeight: 'bold'\n                }\n            },\n            labelLine: {\n                show: false\n            },\n            data: [\n                {value: res.data.data[0], name: '0-9岁'},\n                {value: res.data.data[1], name: '10-19岁'},\n                {value: res.data.data[2], name: '20-29岁'},\n                {value: res.data.data[3], name: '30-39岁'},\n                {value: res.data.data[4], name: '40-49岁'},\n                {value: res.data.data[5], name: '50-59岁'},\n                {value: res.data.data[6], name: '60-69岁'},\n                {value: res.data.data[7], name: '70-79岁'},\n                {value: res.data.data[8], name: '80-89岁'},\n                {value: res.data.data[9], name: '90-99岁'},\n            ]\n        }\n    ]\n};\n// 使用刚指定的配置项和数据显示图表。\n          myChart.setOption(option);\n      })\n      .catch(err => {\n        console.error(err); \n      })\n    },\n    //统计挂号科室人数\n    orderSection(){\n      var myChart = this.$echarts.init(document.getElementById(\"orderSection\"));\n      request.get(\"order/orderSection\")\n      .then(res => {\n        console.log(res.data.data.map((item) => item.countSection));\n        console.log(res.data.data.map((item) => item.doctor.dSection))\n        var option = {\n             title: {\n        text: '挂号科室人数统计',\n        left: 'center'\n    },\n    xAxis: {\n        type: 'category',\n        data: res.data.data.map((item) => item.doctor.dSection),\n        axisLabel: {//解决各个不显示问题\n           interval:0,\n           rotate:10,\n           }\n\n    },\n    yAxis: {\n        type: 'value'\n    },\n    series: [{\n        data: res.data.data.map((item) => item.countSection),\n        type: 'bar',\n        showBackground: true,\n        backgroundStyle: {\n            color: 'rgba(180, 180, 180, 0.2)'\n        }\n    }]\n};\n// 使用刚指定的配置项和数据显示图表。\n          myChart.setOption(option);\n\n\n        \n\n      })\n      .catch(err => {\n        console.error(err); \n      })\n    },\n    //挂号男女比例\n    orderGender(){\n      var myChart = this.$echarts.init(document.getElementById(\"orderGender\"));\n      request.get(\"order/orderGender\",)\n      .then(res => {\n      var option = {\n    title: {\n        text: '患者性别比例',\n        left: 'center'\n    },\n    tooltip: {\n        trigger: 'item'\n    },\n    legend: {\n        orient: 'vertical',\n        left: 'left',\n    },\n    series: [\n        {\n            name: '人数',\n            type: 'pie',\n            radius: '50%',\n            data: [\n                {value: res.data.data.map((item) => item.countGender)[0], name: res.data.data.map((item) => item.patient.pGender)[0]},\n                {value: res.data.data.map((item) => item.countGender)[1], name: res.data.data.map((item) => item.patient.pGender)[1]},\n                \n            ],\n            emphasis: {\n                itemStyle: {\n                    shadowBlur: 10,\n                    shadowOffsetX: 0,\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n            }\n        }\n    ]\n};\n          // 使用刚指定的配置项和数据显示图表。\n          myChart.setOption(option);\n\n      })\n      .catch(err => {\n        console.error(err); \n      });\n\n\n    },\n    //获取过去num天日期\n    pastSeven(num) {\n      var date = new Date();\n      date.setDate(date.getDate() - num);\n      var time = date.getMonth() + 1 + \"-\" + date.getDate();\n      return time;\n    },\n    //挂号人数图表\n    orderPeople() {\n      var myChart = this.$echarts.init(document.getElementById(\"orderPeople\"));\n      request\n        .get(\"order/orderSeven\")\n        .then((res) => {\n          if (res.data.status !== 200)\n            return this.$message.error(\"数据请求失败！\");\n          var option = {\n            title: {\n              text: \"近20天挂号人数折线图\",\n              left: \"5%\",\n            },\n            xAxis: {\n              type: \"category\",\n              data: this.sevenDate,\n            },\n            yAxis: {\n              type: \"value\",\n            },\n            series: [\n              {\n                data: res.data.data,\n                type: \"line\",\n              },\n            ],\n          };\n          // 使用刚指定的配置项和数据显示图表。\n          myChart.setOption(option);\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n      // console.info(this.$echarts);\n    },\n    //统计剩余药品\n    remainingMedicines(){\n      var myChart = this.$echarts.init(document.getElementById(\"remainingMedicines\"));\n      request.get(\"order/orderSection\")\n          .then(res => {\n            console.log(res.data.data.map((item) => item.countSection));\n            console.log(res.data.data.map((item) => item.doctor.dSection))\n            var option = {\n              title: {\n                text: '剩余药品预警（显示剩余药品数量不超过20）',\n                left: 'center'\n              },\n              xAxis: {\n                type: 'category',\n                data: res.data.data.map((item) => item.doctor.dSection),\n                axisLabel: {//解决各个不显示问题\n                  interval:0,\n                  rotate:10,\n                }\n              },\n              yAxis: {\n                type: 'value'\n              },\n              series: [{\n                data: res.data.data.map((item) => item.countSection),\n                type: 'bar',\n                showBackground: true,\n                backgroundStyle: {\n                  color: 'rgba(180, 180, 180, 0.2)'\n                }\n              }]\n            };\n// 使用刚指定的配置项和数据显示图表。\n            myChart.setOption(option);\n\n\n\n\n          })\n          .catch(err => {\n            console.error(err);\n          })\n    },\n  },\n  mounted() {\n    this.orderPeople();\n    this.orderGender();\n    this.orderSection();\n    this.patientAge();\n    this.remainingMedicines();\n  },\n  created() {\n    //获取过去7天日期\n    for (var i = 20; i > 0; i--) {\n      this.sevenDate.push(this.pastSeven(i));\n    }\n  },\n};\n\n// console.info(this.$echarts);\n</script>\n\n<style>\n</style>\n"]}]}